<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp"
    crossorigin="anonymous">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB"
    crossorigin="anonymous">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/animation.css">
  <title>SDrive</title>
  <script>

(function() {
'use strict';
window.addEventListener('load', function() {
// Fetch all the forms we want to apply custom Bootstrap validation styles to
var forms = document.getElementsByClassName('needs-validation');
// Loop over them and prevent submission
var validation = Array.prototype.filter.call(forms, function(form) {
form.addEventListener('submit', function(event) {
if (form.checkValidity() === false) {
event.preventDefault();
event.stopPropagation();
}
form.classList.add('was-validated');
}, false);
});
}, false);
})();
    </script>
        <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">

  <style>
      a:hover{
          text-decoration: none;
        
      }
      #locationField, #controls {
        position: relative;
        margin-top:-5px;
      
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      #autocomplete_address {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
        font-family: "Roboto";
      }
      #address {
        border: 1px solid #000090;
        background-color: #f0f9ff;
        width: 480px;
        padding-right: 2px;
      }
      #address td {
        font-size: 10pt;
      }
      .field {
        width: 99%;
      }
      .slimField {
        width: 80px;
      }
      .wideField {
        width: 200px;
      }
      #locationField {
        height: 20px;
        margin-bottom: 2px;
      }
      
      
  </style> 
</head>

<body style="background-color: #fff;" data-spy="scroll" data-target="#main-nav" id="home">

 
 
  <!-- HOME SECTION -->
  <header>
    <div class="dark-overlay col-sm-12 p-0 ">
      <div class="home-inner container p-1 ">
        <div class="row bg-white p-0 col-lg-12 col-sm-12  m-auto" style="opacity: 0.8; border-radius: 20px;">
          <div class="card card-form" style="width:<%=Data.Width%>px;min-height:<%=Data.Height%>px; background:#fff;color:<%=Data.Text_Color%>;border:none">
            <div class="card-body col-sm-12 " style="background-image: url('/<%=Data.Background%>');background-repeat: no-repeat; min-height: height:<%=Data.Height%>px;">
            <img class="mx-auto d-block" src="/<%=Data.Logo%>" height="40px">
            <img class="mx-auto d-block mt-3" src="/<%=ad.Picture_1%>" width="100px" height="100px" >
              
           
           
            <form id="myForm1" method="POST" action="/checkout" class="needs-validation" novalidate>
                <div class="form-group">
                  
                  <input type="text" pattern="^[a-zA-Z0-9\s]{4,20}$"   name="buyer_name" required class="form-control form-control-lg" placeholder="Enter your Name">
                  <div class="valid-feedback">Valid</div>
                  <div class="invalid-feedback">
   Length Must be 4-10 charactors a-zA-Z0-9\s
</div>

<div class="form-group">
    
  <input type="number"  name="buyer_phone" required class="form-control form-control-lg" placeholder="Enter your phone number">
  <div class="valid-feedback">Valid</div>
  <div class="invalid-feedback">
plz enter phone number
</div>
<div class="form-group">
    
    <select id="select" required class="btn  col-6 form-control form-control-lg Btn-custom" data-style="btn Btn-custom " name="collection">
    <option value="">Select Collection</option>
   <option value="store">Store Pic Up</option>
   <option value="address">Delivery</option>
    </select>
    <div  class="valid-feedback">Valid</div>
    <div  class="invalid-feedback">
Choose Correct option
</div>
                    </div>
                   
                    <div class="form-group store" id="locationField" style="display: none;">
                       
                      <input type="text"   id="autocomplete"   name="store_address" class="form-control form-control-lg" placeholder="Enter Nearest Store Address">
                      <div class="valid-feedback">Valid</div>
                      <div class="invalid-feedback">
       plz enter nearest store address
    </div>
</div>

    <div class="form-group address" id="locationField" style="display: none;">
        sssss
      <input id="autocomplete_address" type="text"  name="buyer_address" class="form-control form-control-lg" placeholder="Enter your address">
      <div class="valid-feedback">Valid</div>
      <div class="invalid-feedback">
plz entery your address
</div>
</div>

<div class="form-group text-center mt-4">
<input type="hidden" name="widget_id" value="<%=Data._id%>">
<input type="hidden" name="item_id" value="<%=ad._id%>">
  <input class="btn btn-sm mt-2" style="background-color: <%=Data.Nav_Btn_Color%>; color:<%=Data.Nav_Btn_Text_Color%>" type="submit" value="Confirm">  
            </div>
            </form>
            <script>
              // This sample uses the Autocomplete widget to help the user select a
              // place, then it retrieves the address components associated with that
              // place, and then it populates the form fields with those details.
              // This sample requires the Places library. Include the libraries=places
              // parameter when you first load the API. For example:
              // <script
              // src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
              
              var placeSearch, autocomplete,autocomplete_address;
              
              var componentForm = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
              };
              
              function initAutocomplete() {
                // Create the autocomplete object, restricting the search predictions to
                // geographical location types.
                autocomplete = new google.maps.places.Autocomplete(
                    document.getElementById('autocomplete'), {types: ['geocode']});
                autocomplete_address = new google.maps.places.Autocomplete(
                    document.getElementById('autocomplete_address'), {types: ['geocode']});
              
                // Avoid paying for data that you don't need by restricting the set of
                // place fields that are returned to just the address components.
                autocomplete.setFields(['address_component']);
              
                // When the user selects an address from the drop-down, populate the
                // address fields in the form.
                autocomplete.addListener('place_changed', fillInAddress);
              }
              
              function fillInAddress() {
                // Get the place details from the autocomplete object.
                var place = autocomplete.getPlace();
              
                for (var component in componentForm) {
                  document.getElementById(component).value = '';
                  document.getElementById(component).disabled = false;
                }
              
                // Get each component of the address from the place details,
                // and then fill-in the corresponding field on the form.
                for (var i = 0; i < place.address_components.length; i++) {
                  var addressType = place.address_components[i].types[0];
                  if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                  }
                }
              }
              
              // Bias the autocomplete object to the user's geographical location,
              // as supplied by the browser's 'navigator.geolocation' object.
              function geolocate() {
                if (navigator.geolocation) {
                  navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                      lat: position.coords.latitude,
                      lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle(
                        {center: geolocation, radius: position.coords.accuracy});
                    autocomplete.setBounds(circle.getBounds());
                  });
                }
              }
                  </script>
                  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1SQEEL4P4UA7vkAcFC3L_EkDx1vLrtAU&libraries=places&callback=initAutocomplete"
                      defer></script>          
            

             
              
            </div>
          </div>




       </div>   
      </div>
    </div>
</header>
  

  <!-- EXPLORE SECTION -->
 
 

  <!-- FOOTER -->
  

  <!-- CONTACT MODAL -->
  


  <script src="http://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T"
    crossorigin="anonymous"></script>
<script>
  // Trigger CSS animations on scroll.
// Detailed explanation can be found at http://www.bram.us/2013/11/20/scroll-animations/

// Looking for a version that also reverses the animation when
// elements scroll below the fold again?
// --> Check https://codepen.io/bramus/pen/vKpjNP

jQuery(function($) {
  
  // Function which adds the 'animated' class to any '.animatable' in view
  var doAnimations = function() {
    
    // Calc current offset and get all animatables
    var offset = $(window).scrollTop() + $(window).height(),
        $animatables = $('.animatable');
    
    // Unbind scroll handler if we have no animatables
    if ($animatables.length == 0) {
      $(window).off('scroll', doAnimations);
    }
    
    // Check all animatables and animate them if necessary
		$animatables.each(function(i) {
       var $animatable = $(this);
			if (($animatable.offset().top + $animatable.height() - 20) < offset) {
        $animatable.removeClass('animatable').addClass('animated');
			}
    });

	};
  
  // Hook doAnimations on scroll, and trigger a scroll
	$(window).on('scroll', doAnimations);
  $(window).trigger('scroll');

});
  </script>
  <script>
    // Get the current year for the copyright
    $('#year').text(new Date().getFullYear());

    // Init Scrollspy
    $('body').scrollspy({ target: '#main-nav' });

    // Smooth Scrolling
    $("#main-nav a").on('click', function (event) {
      if (this.hash !== "") {
        event.preventDefault();

        const hash = this.hash;

        $('html, body').animate({
          scrollTop: $(hash).offset().top
        }, 800, function () {

          window.location.hash = hash;
        });
      }
    });
  </script>
  <script>
    // Get the current year for the copyright
    $('#year').text(new Date().getFullYear());

    // Init Scrollspy
    $('body').scrollspy({ target: '#main-nav' });

    // Smooth Scrolling
    $("#main-nav a").on('click', function (event) {
      if (this.hash !== "") {
        event.preventDefault();

        const hash = this.hash;

        $('html, body').animate({
          scrollTop: $(hash).offset().top
        }, 800, function () {

          window.location.hash = hash;
        });
      }
    });
  </script>
  <script>
   $(document).ready (function(){
    $(".alert-dismissible").fadeTo(2000, 300).slideUp(300, function(){
    $(".alert-dismissible").alert('close');
});
         
});
  </script>
  <script>
    $(document).ready(function(){
    // Check if passwords match
   
    let currForm1 = document.getElementById('myForm1');
      // Validate on submit:
      currForm1.addEventListener('submit', function(event) {
        if (currForm1.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        currForm1.classList.add('was-validated');
      }, false);
      // Validate on input:
      currForm1.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener(('input'), () => {
          if (input.checkValidity()) {
            input.classList.remove('is-invalid')
            input.classList.add('is-valid');
          } else {
            input.classList.remove('is-valid')
            input.classList.add('is-invalid');
          }
          var is_valid = $('.form-control').length === $('.form-control.is-valid').length;
          $("#submitBtn").attr("disabled", !is_valid);
        });
      });
    });
  </script>
<script>
    $(document).ready(function(){
      $('#select').on('change', function() {
        if ( this.value == 'store' )
        //.....................^.......
        {
          $(".store").show();
          $(".address").hide();

        }
        else if ( this.value == 'address')
        {
            $(".store").hide();
          $(".address").show();

        }
        else
        {
            $(".store").hide();
          $(".address").hide();
        }
        
       
        
        
      });
  });
  </script>
</body>

</html>